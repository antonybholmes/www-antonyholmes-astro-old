---
import PostsPage from "../../../components/pages/posts-page"
import ContentLayout from "../../../layouts/ContentLayout.astro"
import { getAuthorMap } from "../../../lib/api/author"
import {
  addAuthorsToPosts,
  addExcerpts,
  getAllPosts,
  getCategoryPostMap,
  sortPosts,
} from "../../../lib/api/post"
import { getPageCount, paginate } from "../../../lib/paginate"
import { getUrlFriendlyTag } from "../../../lib/tags"
import {
  getCategoryBaseUrl,
  getSectionBaseUrl,
  getSectionUrl,
} from "../../../lib/urls"

export async function getStaticPaths() {
  let paths: any[] = []

  const allPosts = addAuthorsToPosts(
    await Promise.all(addExcerpts(sortPosts(getAllPosts()))),
    getAuthorMap()
  )

  const categoryMap = getCategoryPostMap(allPosts)

  Object.keys(categoryMap).forEach(category => {
    const categoryPosts = categoryMap[category]["All"]

    paths.push(
      paginate(categoryPosts, getUrlFriendlyTag(category), {
        title: category,
        showTitle: true,
        superTitle: "Category",
        root: getCategoryBaseUrl(category),
      })
    )

    Object.keys(categoryMap[category]).forEach(section => {
      if (section !== "All") {
        const root = getSectionUrl(category, section)
        console.log(root)
        paths.push(
          paginate(categoryPosts, root, {
            title: section,
            showTitle: true,
            superTitle: "Section",
            root: getSectionBaseUrl(category, section),
          })
        )
      }
    })
  })

  return paths
}

const { slug } = Astro.params

const { title, superTitle, showTitle, page, root, pages, data } = Astro.props
---

<ContentLayout
  title={title}
  superTitle={superTitle}
  showTitle={showTitle}
  tab="Blog"
>
  <PostsPage posts={data} page={page} pages={pages} root={root} slot="main" />
</ContentLayout>
