---
import BaseRow from "../../components/BaseRow.astro"
import HCenterRow from "../../components/HCenterRow.astro"
import PageTitle from "../../components/page-title"
import PostsPage from "../../components/pages/PostsPage.astro"
import AvatarImageLarge from "../../components/person/avatar-image-large"
import PostBody from "../../components/post/post-body"
import ContentLayout from "../../layouts/ContentLayout.astro"
import {
  addAuthorHtml,
  getAllAuthors,
  getAuthorMap,
} from "../../lib/api/author"
import {
  addAuthorsToPosts,
  addExcerpts,
  getAllPosts,
  getAuthorPostMap,
  sortPosts,
} from "../../lib/api/post"
import { paginate } from "../../lib/paginate"
import { getUrlFriendlyTag } from "../../lib/tags"
import { getAuthorBaseUrl } from "../../lib/urls"
import { PEOPLE_SLUG } from "../../constants"
import { CollectionEntry, getCollection } from "astro:content"

export async function getStaticPaths() {
  const paths: any[] = []

  const people = await getCollection("people")
  const allPosts = await getCollection("blog")

  const authorMap = getAuthorMap(people)

  const postMap = getAuthorPostMap(await sortPosts(allPosts))

  people.forEach(person => {
    const slug = getUrlFriendlyTag(person.data.name)
    const posts = postMap[slug]

    paths.push(
      paginate(posts, slug, {
        person,
        root: getAuthorBaseUrl(person.data.name),
      })
    )
  })

  return paths
}

interface Props {
  person: CollectionEntry<"people">
  data: CollectionEntry<"blog">[]
  page: number
  pages: number
}

const { person, data, page, pages } = Astro.props

const { Content, headings } = await person.render()
---

<ContentLayout title={person.data.name}>
  <div slot="main">
    <BaseRow className="gap-x-8">
      <div class="w-full">
        <HCenterRow className="mb-8 lg:hidden">
          <div>
            <AvatarImageLarge person={person.data.name} className="w-56" />
          </div>
        </HCenterRow>
        <PageTitle
          title={person.data.name}
          superTitle="Posts by"
          subTitle={person.data.title}
          className="text-center lg:text-left"
        />
        <PostBody className="mt-8"><Content /></PostBody>
      </div>
      <div class="hidden lg:block">
        <AvatarImageLarge person={person.data.name} className="w-64" />
      </div>
    </BaseRow>

    <section class="mt-16 border-t border-slate-200 pt-16">
      <PostsPage
        posts={data}
        page={page}
        pages={pages}
        root={`${PEOPLE_SLUG}/${person.slug}`}
      />
    </section>
  </div>
</ContentLayout>
